{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","storageKey","localStorage","getItem","storageKeyObject","JSON","parse","hashMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","console","log","on","window","open","e","stopPropagation","splice","string","stringify","removeItem","setItem","prompt","indexOf","push","toUpperCase","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.c45c504d.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst storageKey = localStorage.getItem('key')\r\nconst storageKeyObject = JSON.parse(storageKey) //把字符串重新变成对象\r\nconst hashMap = storageKeyObject || [{\r\n    logo: 'A',\r\n    logoType: 'text',\r\n    url: 'https://www.acfun.cn'\r\n}, {\r\n    logo: 'B',\r\n    logoType: 'image',\r\n    url: 'https://bilibili.com'\r\n}, ] // 把页面的内容存在一个数组内 然后把数组存在本地存储里\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '') //删除/ 开头的内容\r\n} //字符串删除替换API\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove() //不找最后一个li\r\n    hashMap.forEach((node, index) => {\r\n\r\n        const $li = $(`<li>\r\n          <div class=\"site\">\r\n            <div class=\"logo\">${node.logo}</div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n            <div class=\"close\">\r\n              <svg class=\"icon\" >\r\n                <use xlink:href=\"#icon-Close\"></use>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </li>`).insertBefore($lastLi)\r\n        console.log(hashMap);\r\n        $li.on('click', () => {\r\n            window.open(node.url, '_self') //代替a标签 打开地址，且不打开新窗口\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation() //阻止冒泡\r\n            hashMap.splice(index, 1)\r\n            const string = JSON.stringify(hashMap) //把当前hashMap再转化成字符串\r\n            localStorage.removeItem('key', string) //先删除\r\n            localStorage.setItem('key', string) //再保存一次\r\n            render() //重新渲染\r\n        })\r\n    })\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton').on('click', () => {\r\n    let url = window.prompt('请问你要添加的网址是啥?')\r\n    if (url.indexOf('http') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n    console.log(url);\r\n    hashMap.push({\r\n        logo: simplifyUrl(url).toUpperCase()[0], // 把新添加的网址简化后的第一个字母加大写变成logo\r\n        logoType: 'text',\r\n        url: url\r\n    })\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('key', string) // 改进一下 每次用户点击都保存一次\r\n    render()\r\n\r\n})\r\n\r\n// window.onbeforeunload = () => { // 关闭页面的API\r\n//     const string = JSON.stringify(hashMap) //把数组转化为字符串\r\n//     localStorage.setItem('key', string) //在本地的存储里面 设置一个key 它的值是string\r\n// }\r\n\r\n$(document).on('keypress', (e) => {\r\n    // const key = e.key;\r\n    const {\r\n        key\r\n    } = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url, '_self')\r\n        }\r\n    }\r\n\r\n})"]}