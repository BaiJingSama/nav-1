{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","storageKey","localStorage","getItem","storageKeyObject","JSON","parse","hashMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","confirm","splice","string","stringify","removeItem","setItem","prompt","indexOf","push","toUpperCase","document","key","i","length","toLowerCase","$input"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,aAAaC,aAAaC,OAAb,CAAqB,KAArB,CAAnB;AACA,IAAMC,mBAAmBC,KAAKC,KAAL,CAAWL,UAAX,CAAzB,EAAgD;AAChD,IAAMM,UAAUH,oBAAoB,CAAC;AACjCI,UAAM,GAD2B;AAEjCC,cAAU,MAFuB;AAGjCC,SAAK;AAH4B,CAAD,EAIjC;AACCF,UAAM,GADP;AAECC,cAAU,OAFX;AAGCC,SAAK;AAHN,CAJiC,EAQjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CARiC,EAYjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CAZiC,EAgBjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CAhBiC,EAoBjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CApBiC,EAwBjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CAxBiC,EA4BjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CA5BiC,EAgCjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CAhCiC,EAoCjC;AACCF,UAAM,GADP;AAECC,cAAU,MAFX;AAGCC,SAAK;AAHN,CApCiC,CAApC,EAwCG;;AAEH,IAAMC,cAAc,SAAdA,WAAc,CAACD,GAAD,EAAS;AACzB,WAAOA,IAAIE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EACFA,OADE,CACM,SADN,EACiB,EADjB,EAEFA,OAFE,CAEM,MAFN,EAEc,EAFd,EAGFA,OAHE,CAGM,MAHN,EAGc,EAHd,EAGkB;AAHlB,KAIFA,OAJE,CAIM,uBAJN,EAI+B,OAJ/B,EAKFA,OALE,CAKM,QALN,EAKgB,KALhB,CAAP;AAMH,CAPD,EAOE;;AAEF,IAAMC,SAAS,SAATA,MAAS,GAAM;AACjBhB,cAAUG,IAAV,CAAe,eAAf,EAAgCc,MAAhC,GADiB,CACwB;AACzCP,YAAQQ,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;;AAE7B,YAAMC,MAAMpB,yEAEYkB,KAAKR,IAFjB,8CAGYG,YAAYK,KAAKN,GAAjB,CAHZ,oOAUJS,YAVI,CAUSpB,OAVT,CAAZ;AAWAmB,YAAIE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AAClBC,mBAAOC,IAAP,CAAYN,KAAKN,GAAjB,EAAsB,OAAtB,EADkB,CACa;AAClC,SAFD;AAGAQ,YAAIE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC7BA,cAAEC,eAAF,GAD6B,CACT;AACpB,gBAAIC,QAAQ,aAAR,CAAJ,EAA4B;AACxBlB,wBAAQmB,MAAR,CAAeT,KAAf,EAAsB,CAAtB;AACA,oBAAMU,SAAStB,KAAKuB,SAAL,CAAerB,OAAf,CAAf,CAFwB,CAEe;AACvCL,6BAAa2B,UAAb,CAAwB,KAAxB,EAA+BF,MAA/B,EAHwB,CAGe;AACvCzB,6BAAa4B,OAAb,CAAqB,KAArB,EAA4BH,MAA5B,EAJwB,CAIY;AACpCd,yBALwB,CAKf;AACZ,aAND,MAMO;AACH;AACH;AAEJ,SAZD;AAcH,KA9BD;AA+BH,CAjCD;;AAmCAA;;AAEAf,EAAE,YAAF,EAAgBsB,EAAhB,CAAmB,OAAnB,EAA4B,YAAM;AAC9B,QAAIV,MAAMW,OAAOU,MAAP,CAAc,cAAd,CAAV;AACA,QAAIrB,IAAIsB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAC3BtB,cAAM,aAAaA,GAAnB;AACH;AACDH,YAAQ0B,IAAR,CAAa;AACTzB,cAAMG,YAAYD,GAAZ,EAAiBwB,WAAjB,GAA+B,CAA/B,CADG,EACgC;AACzCzB,kBAAU,MAFD;AAGTC,aAAKA;AAHI,KAAb;AAKA,QAAMiB,SAAStB,KAAKuB,SAAL,CAAerB,OAAf,CAAf;AACAL,iBAAa4B,OAAb,CAAqB,KAArB,EAA4BH,MAA5B,EAX8B,CAWM;AACpCd;AAEH,CAdD;;AAgBA;AACA;AACA;AACA;;AAEAf,EAAEqC,QAAF,EAAYf,EAAZ,CAAe,UAAf,EAA2B,UAACG,CAAD,EAAO;AAC9B;AAD8B,QAG1Ba,GAH0B,GAI1Bb,CAJ0B,CAG1Ba,GAH0B;;AAK9B,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI9B,QAAQ+B,MAA5B,EAAoCD,GAApC,EAAyC;AACrC,YAAI9B,QAAQ8B,CAAR,EAAW7B,IAAX,CAAgB+B,WAAhB,OAAkCH,GAAtC,EAA2C;AACvCf,mBAAOC,IAAP,CAAYf,QAAQ8B,CAAR,EAAW3B,GAAvB,EAA4B,OAA5B;AACH;AACJ;AAEJ,CAXD;AAYA,IAAM8B,SAAS1C,EAAE,QAAF,CAAf;AACA0C,OAAOpB,EAAP,CAAU,UAAV,EAAsB,UAACG,CAAD,EAAO;AACzBA,MAAEC,eAAF;AACH,CAFD","file":"main.211003a3.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst storageKey = localStorage.getItem('key')\r\nconst storageKeyObject = JSON.parse(storageKey) //把字符串重新变成对象\r\nconst hashMap = storageKeyObject || [{\r\n    logo: 'A',\r\n    logoType: 'text',\r\n    url: 'https://www.acfun.cn'\r\n}, {\r\n    logo: 'B',\r\n    logoType: 'image',\r\n    url: 'https://bilibili.com'\r\n}, {\r\n    logo: 'M',\r\n    logoType: 'text',\r\n    url: 'https://developer.mozilla.org/zh-CN/'\r\n}, {\r\n    logo: 'W',\r\n    logoType: 'text',\r\n    url: 'https://www.w3school.com.cn/jsref/index.asp'\r\n}, {\r\n    logo: 'C',\r\n    logoType: 'text',\r\n    url: 'https://www.csdn.net/'\r\n}, {\r\n    logo: 'G',\r\n    logoType: 'text',\r\n    url: 'https://google.com'\r\n}, {\r\n    logo: 'Z',\r\n    logoType: 'text',\r\n    url: 'https://www.zhihu.com/'\r\n}, {\r\n    logo: 'J',\r\n    logoType: 'text',\r\n    url: 'https://juejin.cn/'\r\n}, {\r\n    logo: 'I',\r\n    logoType: 'text',\r\n    url: 'https://www.iciba.com/'\r\n}, {\r\n    logo: 'G',\r\n    logoType: 'text',\r\n    url: 'https://github.com/'\r\n}] // 把页面的内容存在一个数组内 然后把数组存在本地存储里\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '') //删除/ 开头的内容\r\n        .replace('developer.mozilla.org', 'MDN官网')\r\n        .replace('com.cn', 'com')\r\n} //字符串删除替换API\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove() //不找最后一个li\r\n    hashMap.forEach((node, index) => {\r\n\r\n        const $li = $(`<li>\r\n          <div class=\"site\">\r\n            <div class=\"logo\">${node.logo}</div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n            <div class=\"close\">\r\n              <svg class=\"icon\" aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-Close\"></use>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </li>`).insertBefore($lastLi)\r\n        $li.on('click', () => {\r\n            window.open(node.url, '_self') //代替a标签 打开地址，且不打开新窗口\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation() //阻止冒泡\r\n            if (confirm(\"确定要删除这个标签吗？\")) {\r\n                hashMap.splice(index, 1)\r\n                const string = JSON.stringify(hashMap) //把当前hashMap再转化成字符串\r\n                localStorage.removeItem('key', string) //先删除\r\n                localStorage.setItem('key', string) //再保存一次\r\n                render() //重新渲染\r\n            } else {\r\n                return;\r\n            }\r\n\r\n        })\r\n\r\n    })\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton').on('click', () => {\r\n    let url = window.prompt('请问你要添加的网址是啥?')\r\n    if (url.indexOf('http') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n    hashMap.push({\r\n        logo: simplifyUrl(url).toUpperCase()[0], // 把新添加的网址简化后的第一个字母加大写变成logo\r\n        logoType: 'text',\r\n        url: url\r\n    })\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('key', string) // 改进一下 每次用户点击都保存一次\r\n    render()\r\n\r\n})\r\n\r\n// window.onbeforeunload = () => { // 关闭页面的API\r\n//     const string = JSON.stringify(hashMap) //把数组转化为字符串\r\n//     localStorage.setItem('key', string) //在本地的存储里面 设置一个key 它的值是string\r\n// }\r\n\r\n$(document).on('keypress', (e) => {\r\n    // const key = e.key;\r\n    const {\r\n        key\r\n    } = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url, '_self')\r\n        }\r\n    }\r\n\r\n})\r\nconst $input = $(\".input\")\r\n$input.on('keypress', (e) => {\r\n    e.stopPropagation()\r\n})"]}